# data file for the Fltk User Interface Designer (fluid)
version 1.0109 
i18n_type 1 
i18n_include "otbI18n.h" 
i18n_function otbGetTextMacro 
header_name {.h} 
code_name {.cxx}
decl {\#include "otbProjectionEnum.h"} {public local
} 

class ProjectionGroup {open
} {
  Function {CreateGUI()} {open return_type void
  } {
    Fl_Window guiMainWindow {
      label Projection open
      xywh {329 197 430 500} type Double box PLASTIC_DOWN_BOX color 7 selection_color 7 labelcolor 187 visible
    } {
      Fl_Tabs m_TabsMode {
        callback {this->TabPositionHandler();} open
        xywh {5 9 420 443} box PLASTIC_UP_BOX color 57 selection_color 47 labelfont 2 labelsize 12 align 0 when 1
      } {
        Fl_Group {} {
          label {Output image} open
          xywh {5 30 420 422} box PLASTIC_DOWN_BOX color 7 selection_color 7 labelfont 2 labelsize 11 when 1 hide
        } {
          Fl_Choice guiMapSelection {
            label {Map Projection}
            callback {this->UpdateMapParam();} open
            tooltip {Select the map projection type} xywh {179 47 160 25} box PLASTIC_DOWN_BOX down_box BORDER_BOX color 54 selection_color 55 labelcolor 186
          } {
            MenuItem {} {
              label UTM
              callback {guiEastSelection->show();
guiNorthSelection->show();
m_MapType->show();
m_UTM->show();
m_Lambert2->hide();
m_EPSG->hide();
this->m_MapType->redraw();
SetMapType(MAP_UTM);
this->UpdateUTMTransform();}
              xywh {20 20 100 25} labelsize 11
            }
            MenuItem {} {
              label LAMBERT2
              callback {guiEastSelection->show();
guiNorthSelection->show();
m_MapType->show();
m_UTM->hide();
m_Lambert2->show();
m_EPSG->hide();
this->m_MapType->redraw();
SetMapType(MAP_LAMBERT2);
this->UpdateLambertIITransform();}
              xywh {30 30 100 25} labelsize 11
            }
            MenuItem {} {
              label {WGS 84}
              callback {m_MapType->show();
m_UTM->hide();
m_Lambert2->hide();
m_EPSG->hide();
guiEastSelection->hide();
guiNorthSelection->hide();
this->m_MapType->redraw();
SetMapType(MAP_WGS84);
this->UpdateWGS84Transform();}
              xywh {40 40 100 25} labelsize 11
            }
            MenuItem {} {
              label EPSG
              callback {m_EPSG->show();
m_MapType->show();
m_UTM->hide();
m_Lambert2->hide();
guiEastSelection->show();
guiNorthSelection->show();
this->m_MapType->redraw();
SetMapType(MAP_RSID);
this->UpdateEPSGTransform();}
              xywh {50 50 100 25} labelsize 11
            }
          }
          Fl_Wizard m_MapType {
            label {Output Origin cartographic coordinates } open
            xywh {15 91 400 94} box PLASTIC_DOWN_BOX color 41 selection_color 7 labelsize 12 align 5
          } {
            Fl_Group {} {
              xywh {15 100 400 78} selection_color 7
            } {
              Fl_Input guiLongSelection {
                label Longitude
                callback {UpdateMapParam();}
                tooltip {Enter the longitude of the output image center} xywh {85 107 130 25} box EMBOSSED_BOX color 54 selection_color 39 labelcolor 186 textcolor 187
              }
              Fl_Input guiLatSelection {
                label Latitude
                callback {UpdateMapParam();}
                tooltip {Enter the latitude of the output image center} xywh {84 147 130 25} box EMBOSSED_BOX color 54 selection_color 39 labelcolor 186 textcolor 187
              }
              Fl_Input guiEastSelection {
                label Easting
                callback {this->UpdateOriginGeographicalCoordinates();}
                tooltip {Enter the longitude of the output image center} xywh {279 107 130 25} box EMBOSSED_BOX color 54 selection_color 39 labelcolor 186 textcolor 187
              }
              Fl_Input guiNorthSelection {
                label Northing
                callback {this->UpdateOriginGeographicalCoordinates();}
                tooltip {Enter the latitude of the output image center} xywh {279 147 130 25} box EMBOSSED_BOX color 54 selection_color 39 labelcolor 186 textcolor 187
              }
            }
          }
          Fl_Input guiSizeX {
            label {Size X}
            callback {// Update the lat/long only if Automatic mode
if(guiULPixel->value() == 1 
   || guiCenterPixel->value() == 1)
   this->UpdateLongLat();}
            tooltip {Enter the X output size} xywh {250 266 160 25} box EMBOSSED_BOX color 54 selection_color 39 labelsize 13 labelcolor 186 align 5 textcolor 187
          }
          Fl_Input guiSizeY {
            label {Size Y}
            callback {// Update the lat/long only if Automatic mode
if(guiULPixel->value() == 1 
   || guiCenterPixel->value() == 1)
   this->UpdateLongLat();}
            tooltip {Enter the Y output size} xywh {250 316 160 25} box EMBOSSED_BOX color 54 selection_color 39 labelsize 13 labelcolor 186 align 5 textcolor 187
          }
          Fl_Input guiSpacingX {
            label {Spacing X}
            callback {// Update the lat/long only if Automatic mode
if(guiULPixel->value() == 1 
   || guiCenterPixel->value() == 1)
   this->UpdateLongLat();}
            tooltip {Enter X spacing} xywh {250 366 160 25} box EMBOSSED_BOX color 54 selection_color 39 labelsize 13 labelcolor 186 align 5 textcolor 187
          }
          Fl_Input guiSpacingY {
            label {Spacing Y}
            callback {// Update the lat/long only if Automatic mode
if(guiULPixel->value() == 1 
   || guiCenterPixel->value() == 1)
   this->UpdateLongLat();}
            tooltip {Enter Y spacing} xywh {250 416 160 25} box EMBOSSED_BOX color 54 selection_color 39 labelsize 13 labelcolor 186 align 5 textcolor 187
          }
          Fl_Group {} {
            label {Map parameters} open
            xywh {15 268 225 174} box PLASTIC_DOWN_BOX color 50 labelsize 12 labelcolor 194 align 5
          } {
            Fl_Group m_UTM {open
              xywh {15 268 225 174} selection_color 7
            } {
              Fl_Input guiUTMZone {
                label Zone
                callback {this->UpdateUTMTransform();
this->UpdateOriginGeographicalCoordinates();}
                tooltip {Enter the zone number} xywh {81 288 120 25} box EMBOSSED_BOX color 54 selection_color 39 labelcolor 186 textcolor 187
              }
              Fl_Round_Button guiUTMNorth {
                label {Northern hemisphere}
                callback {guiUTMNorth->value(1);
guiUTMSouth->value(0);
this->UpdateUTMTransform();
this->UpdateOriginGeographicalCoordinates();}
                xywh {25 318 35 39} down_box ROUND_DOWN_BOX value 1 align 8
              }
              Fl_Round_Button guiUTMSouth {
                label {Southern hemisphere}
                callback {guiUTMSouth->value(1);
guiUTMNorth->value(0);
this->UpdateUTMTransform();
this->UpdateOriginGeographicalCoordinates();}
                xywh {25 353 35 39} down_box ROUND_DOWN_BOX align 8
              }
            }
            Fl_Group m_Lambert2 {open
              xywh {15 268 225 174} selection_color 7 hide
            } {}
            Fl_Group m_EPSG {open
              xywh {15 268 225 174} selection_color 7 hide
            } {
              Fl_Input guiRSIDNumber {
                label RSID
                callback {this->TestUpdateEPSGTransform();
this->UpdateEPSGTransform();
this->UpdateOriginGeographicalCoordinates();}
                tooltip {Enter the RSID Number} xywh {81 288 120 25} box EMBOSSED_BOX color 54 selection_color 39 labelcolor 186 textcolor 187
              }
            }
          }
          Fl_Round_Button guiCenterPixel {
            label Centered
            callback {// deactivate the other round buttons
guiULPixel->value(0);
guiCenterPixel->value(1);
guiUserDefinition->value(0);

// do the job
this->UpdateLongLat();

//Deactivate all the MapType parameters in the GUI
this->DeactivateMapParamaters();}
            tooltip {If checked, use the output center image coordinates to be the center of the projected image} xywh {220 225 19 15} down_box ROUND_DOWN_BOX value 1 color 7 labelcolor 186
          }
          Fl_Round_Button guiULPixel {
            label {Upper-Left as output origin}
            callback {// deactivate the other round buttons
guiULPixel->value(1);
guiCenterPixel->value(0);
guiUserDefinition->value(0);

// do the job
this->UpdateLongLat();

// Deactivate all the map parameters
this->DeactivateMapParamaters();}
            tooltip {If checked, use the upper left output image pixel coordinates to be the origin of the projected image} xywh {220 200 19 15} down_box ROUND_DOWN_BOX color 7 labelcolor 186
          }
          Fl_Round_Button guiUserDefinition {
            label {User Defined Parameters}
            callback {// deactivate the other round buttons
guiULPixel->value(0);
guiCenterPixel->value(0);
guiUserDefinition->value(1);

// activate all the map parameters
this->ActivateMapParamaters();}
            tooltip {Id checked, user parameters are used to configure the projection} xywh {20 200 18 15} down_box ROUND_DOWN_BOX color 7 labelcolor 186
          }
        }
        Fl_Group AllGrp {
          label {Input image} open
          xywh {5 30 420 422} box PLASTIC_DOWN_BOX color 7 selection_color 32 labelfont 2 labelsize 11 hide
        } {
          Fl_Choice iMapSelection {
            label {Input map projection}
            callback {this->UpdateMapParam();} open
            tooltip {Select the map projection type} xywh {170 75 160 25} box PLASTIC_DOWN_BOX down_box BORDER_BOX color 54 selection_color 55 labelcolor 186 deactivate
          } {
            MenuItem {} {
              label UTM
              callback {iUTM->show();
iLambert2->hide();
iSensorModel->hide();
this->iMapType->redraw();
this->UpdateInputUTMTransform();}
              xywh {25 25 100 25} labelsize 11
            }
            MenuItem {} {
              label LAMBERT2
              callback {iUTM->hide();
iLambert2->show();
iSensorModel->hide();
this->m_MapType->redraw();
this->UpdateInputLambertIITransform();}
              xywh {35 35 100 25} labelsize 11
            }
            MenuItem {} {
              label {SENSOR MODEL}
              callback {iUTM->hide();
iLambert2->hide();
iSensorModel->show();}
              xywh {45 45 100 25} labelsize 11
            }
          }
          Fl_Wizard iMapType {
            label {Input cartographic coordinates} open
            xywh {25 130 376 170} box PLASTIC_DOWN_BOX color 48 selection_color 7 labelsize 12 align 5 deactivate
          } {
            Fl_Group iUTM {open
              xywh {25 130 360 160}
            } {
              Fl_Input iUTMZone {
                label Zone
                callback {//UpdateLongLat();
this->UpdateInputUTMTransform();}
                tooltip {Enter the zone number} xywh {166 167 160 25} box PLASTIC_DOWN_BOX color 54 selection_color 39 labelcolor 186 textcolor 187
              }
              Fl_Round_Button iUTMNorth {
                label {Northern hemisphere}
                callback {guiUTMNorth->value(1);
guiUTMSouth->value(0);
//UpdateLongLat();
this->UpdateInputUTMTransform();}
                xywh {181 225 18 25} down_box ROUND_DOWN_BOX value 1 align 132
              }
              Fl_Round_Button iUTMSouth {
                label {Southern hemisphere}
                callback {guiUTMSouth->value(1);
guiUTMNorth->value(0);
//UpdateLongLat();
this->UpdateInputUTMTransform();}
                xywh {225 225 18 25} down_box ROUND_DOWN_BOX
              }
            }
            Fl_Group iLambert2 {
              callback {this->UpdateInputLambertIITransform();} open
              xywh {31 130 360 160} hide
            } {}
            Fl_Group iSensorModel {open
              xywh {41 140 360 160} hide
            } {}
          }
          Fl_Check_Button guiRPCEstimator {
            label {Estimate Input RPC Model}
            callback {this->UpdateRpcEstimation();}
            xywh {30 310 170 15} down_box DOWN_BOX labelsize 12 labelcolor 186
          }
        }
        Fl_Group {} {
          label Settings open
          xywh {5 30 420 422} box PLASTIC_DOWN_BOX color 7 selection_color 32 labelfont 2 labelsize 11
        } {
          Fl_Wizard m_InterpType {
            label {Interpolator parameters} open
            xywh {44 119 356 126} box PLASTIC_DOWN_BOX color 7 selection_color 7 labelsize 12 labelcolor 186 align 5
          } {
            Fl_Group guiLinear {open
              xywh {44 119 356 126} box PLASTIC_DOWN_BOX color 7 selection_color 7 labelsize 12 labelcolor 186 hide
            } {}
            Fl_Group guiNearest {open
              xywh {44 119 356 126} box PLASTIC_DOWN_BOX color 7 labelsize 12 labelcolor 186
            } {}
            Fl_Group guiSinC {open
              xywh {44 119 356 126} box PLASTIC_DOWN_BOX color 7 labelsize 12 labelcolor 186 hide
            } {
              Fl_Choice guiSincWindow {
                label Interpolator
                tooltip {Select the orthorectification interpolator} xywh {174 150 160 25} box PLASTIC_DOWN_BOX down_box BORDER_BOX color 54 selection_color 55 labelcolor 186
              } {
                MenuItem {} {
                  label Blackman
                  callback {SetInterpolatorType(MAP_SINC);}
                  xywh {35 35 100 25} labelsize 11
                }
                MenuItem {} {
                  label Cosine
                  callback {SetInterpolatorType(MAP_SINC);}
                  xywh {45 45 100 25} labelsize 11
                }
                MenuItem {} {
                  label Gaussian
                  callback {SetInterpolatorType(MAP_SINC);}
                  xywh {55 55 100 25} labelsize 11
                }
                MenuItem {} {
                  label Hamming
                  callback {SetInterpolatorType(MAP_SINC);}
                  xywh {65 65 100 25} labelsize 11
                }
                MenuItem {} {
                  label Lanczos
                  callback {SetInterpolatorType(MAP_SINC);}
                  xywh {75 75 100 25} labelsize 11
                }
                MenuItem {} {
                  label Welch
                  callback {SetInterpolatorType(MAP_SINC);}
                  xywh {85 85 100 25} labelsize 11
                }
              }
              Fl_Value_Input guiSincRadius {
                label Radius
                callback {SetInterpolatorType(MAP_SINC);}
                xywh {174 196 160 25}
              }
            }
            Fl_Group guiSplines {open
              xywh {44 119 356 126} labelsize 12 hide
            } {
              Fl_Counter guiSplineOrder {
                label Radius
                callback {SetInterpolatorType(MAP_SPLINES);}
                xywh {174 174 160 25} align 4 minimum 0 maximum 5 step 1
              }
            }
            Fl_Group guiBCO {
              xywh {44 119 356 126} box PLASTIC_DOWN_BOX color 7 labelsize 12 labelcolor 186 hide
            } {
              Fl_Counter guiBCORadius {
                label {BCO Radius}
                callback {SetInterpolatorType(MAP_BCO);}
                xywh {174 197 160 25} box PLASTIC_DOWN_BOX color 7 labelsize 12 labelcolor 186 align 4 minimum 2 maximum 15000 step 1 value 2
              }
            }
          }
          Fl_Choice guiInterpSelection {
            label Interpolator
            tooltip {Select the Orthorectif Interpolator} xywh {155 70 160 25} box PLASTIC_DOWN_BOX down_box BORDER_BOX color 54 selection_color 55 labelcolor 186
          } {
            MenuItem {} {
              label Linear
              callback {guiLinear->show();
guiNearest->hide();
guiBCO->hide();
guiSinC->hide();
this->m_InterpType->redraw();
SetInterpolatorType(MAP_LINEAR_);}
              xywh {25 25 100 25} labelsize 11
            }
            MenuItem {} {
              label Nearest
              callback {guiLinear->hide();
guiNearest->show();
guiSinC->hide();
this->m_InterpType->redraw();
SetInterpolatorType(MAP_NEAREST);}
              xywh {35 35 100 25} labelsize 11
            }
            MenuItem {} {
              label BCO
              callback {guiLinear->hide();
guiNearest->hide();
guiBCO->show();
guiSinC->hide();
this->m_InterpType->redraw();
SetInterpolatorType(MAP_BCO);}
              xywh {45 45 100 25} labelsize 11
            }
            MenuItem {} {
              label SinC
              callback {guiLinear->hide();
guiNearest->hide();
guiBCO->hide();
guiSinC->show();
this->m_InterpType->redraw();
SetInterpolatorType(MAP_SINC);}
              xywh {35 35 100 25} labelsize 11 hide deactivate
            }
          }
          Fl_Group {} {
            label {DEM selection} open
            xywh {44 275 356 166} box PLASTIC_DOWN_BOX color 7 selection_color 7 labelsize 12 labelcolor 186 align 5
          } {
            Fl_Round_Button choiceDEM {
              label {Use DEM}
              callback {choiceElevation->clear();
vAverageElevation->deactivate();
this->UpdateDEMUse();}
              xywh {56 291 90 21} box PLASTIC_DOWN_BOX down_box ROUND_DOWN_BOX color 7 labelsize 12 labelcolor 186
            }
            Fl_Round_Button choiceElevation {
              label {Use average elevation}
              callback {if(choiceElevation->value()){
choiceDEM->clear();
vDEMPath->deactivate();
bBrowse->deactivate();
vAverageElevation->activate();
}
else
{
vAverageElevation->deactivate();
}}
              xywh {56 383 149 21} box PLASTIC_DOWN_BOX down_box ROUND_DOWN_BOX value 1 color 7 labelsize 12 labelcolor 186
            }
            Fl_File_Input vDEMPath {
              xywh {55 323 291 37} box PLASTIC_DOWN_BOX color 55 selection_color 7 labelfont 1 labelsize 12 labelcolor 186 when 1 textcolor 186
            }
            Fl_Button bBrowse {
              label {...}
              callback {this->Browse();}
              xywh {350 332 41 28} box PLASTIC_DOWN_BOX color 55 labelfont 1 labelsize 12 labelcolor 186
            }
            Fl_Value_Input vAverageElevation {
              label {Elevation value    } selected
              xywh {202 415 108 24} box PLASTIC_DOWN_BOX labelsize 12 labelcolor 186
            }
          }
        }
        Fl_Group gQuickLook {
          label Quicklook
          xywh {5 30 420 422} box PLASTIC_DOWN_BOX color 7 selection_color 32 labelfont 2 labelsize 11 hide
        } {
          Fl_Group gPreviewWindow {open
            xywh {15 36 400 380} resizable
          } {}
          Fl_Check_Button bDispalyPreview {
            label {Preview Projected Image}
            callback {this->DisplayPreviewWidget();}
            xywh {235 425 175 15} box PLASTIC_DOWN_BOX down_box DOWN_BOX labelsize 12 labelcolor 186
          }
        }
      }
      Fl_Progress pBusyBar {
        label {Computing Quicklook}
        xywh {5 469 330 15} box PLASTIC_DOWN_BOX selection_color 1 labelsize 12 labelcolor 186 hide
      }
      Fl_Button guiOK {
        label {Save / Quit}
        callback {OK();}
        tooltip {Compute result} xywh {345 456 80 40} box PLASTIC_DOWN_BOX shortcut 0x71 color 7 selection_color 23 labelcolor 186
      }
    }
  }
  Function {ProjectionGroup()} {} {
    comment {for fluid 1.3} {in_source not_in_header
    }
  }
  Function {~ProjectionGroup()} {open return_type virtual
  } {
    comment {for fluid 1.3} {in_source not_in_header
    }
  }
  Function {OpenDEM()} {open return_type {virtual void}
  } {
    comment {for fluid 1.3} {in_source not_in_header
    }
  }
  Function {OK()} {open return_type {virtual void}
  } {
    comment {for fluid 1.3} {in_source not_in_header
    }
  }
  Function {SelectAction()} {open return_type {virtual void}
  } {
    comment {for fluid 1.3} {in_source not_in_header
    }
  }
  Function {SetMapType(ProjectionMapType map)} {open return_type {virtual void}
  } {
    comment {for fluid 1.3} {in_source not_in_header
    }
  }
  Function {SetInterpolatorType(ProjectionInterpolatorType interp)} {open return_type {virtual void}
  } {
    comment {for fluid 1.3} {in_source not_in_header
    }
  }
  Function {UpdateMapParam()} {open return_type {virtual void}
  } {
    comment {for fluid 1.3} {in_source not_in_header
    }
  }
  Function {UpdateLongLat()} {open return_type {virtual void}
  } {
    comment {for fluid 1.3} {in_source not_in_header
    }
  }
  Function {UpdateUTMTransform()} {open return_type {virtual void}
  } {
    comment {for fluid 1.3} {in_source not_in_header
    }
  }
  Function {UpdateLambertIITransform()} {open return_type {virtual void}
  } {
    comment {for fluid 1.3} {in_source not_in_header
    }
  }
  Function {UpdateInputUTMTransform()} {open return_type {virtual void}
  } {
    comment {for fluid 1.3} {in_source not_in_header
    }
  }
  Function {UpdateInputLambertIITransform()} {open return_type {virtual void}
  } {
    comment {for fluid 1.3} {in_source not_in_header
    }
  }
  Function {UpdateWGS84Transform()} {open return_type {virtual void}
  } {
    comment {for fluid 1.3} {in_source not_in_header
    }
  }
  Function {UpdateEPSGTransform()} {open return_type {virtual void}
  } {
    comment {for fluid 1.3} {in_source not_in_header
    }
  }
  Function {Browse()} {open return_type {virtual void}
  } {
    comment {for fluid 1.3} {in_source not_in_header
    }
  }
  Function {UpdateDEMUse()} {open return_type {virtual void}
  } {
    comment {for fluid 1.3} {in_source not_in_header
    }
  }
  Function {UpdateRpcEstimation()} {open return_type {virtual void}
  } {
    comment {for fluid 1.3} {in_source not_in_header
    }
  }
  Function {DisplayPreviewWidget()} {open protected return_type {virtual void}
  } {
    comment {for fluid 1.3} {in_source not_in_header
    }
  }
  Function {TabPositionHandler()} {open return_type {virtual void}
  } {
    comment {for fluid 1.3} {in_source not_in_header
    }
  }
  Function {UpdateOriginGeographicalCoordinates()} {open return_type {virtual void}
  } {
    comment {for fluid 1.3} {in_source not_in_header
    }
  }
  Function {DeactivateMapParamaters()} {open return_type {virtual void}
  } {
    comment {for fluid 1.3} {in_source not_in_header
    }
  }
  Function {ActivateMapParamaters()} {open return_type {virtual void}
  } {
    comment {for fluid 1.3} {in_source not_in_header
    }
  }
  Function {TestUpdateEPSGTransform()} {open return_type {virtual void}
  } {
    comment {for fluid 1.3} {in_source not_in_header
    }
  }
} 
